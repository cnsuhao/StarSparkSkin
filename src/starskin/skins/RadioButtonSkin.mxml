<?xml version="1.0" encoding="utf-8"?>

<!--

	ADOBE SYSTEMS INCORPORATED
	Copyright 2008 Adobe Systems Incorporated
	All Rights Reserved.

	NOTICE: Adobe permits you to use, modify, and distribute this file
	in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for a Spark RadioButton component.

	   @see spark.components.RadioButton
	   @see spark.components.RadioButtonGroup

	  @langversion 3.0
	  @playerversion Flash 10
	  @playerversion AIR 1.5
	  @productversion Flex 4
-->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" xmlns:fb="http://ns.adobe.com/flashbuilder/2009" alpha.disabledStates="0.5" minWidth="70">

	<fx:Metadata>
		<![CDATA[ 
        /** 
         * @copy spark.skins.spark.ApplicationSkin#hostComponent
         */
        [HostComponent("spark.components.RadioButton")]
    ]]>
	</fx:Metadata>

	<fx:Script fb:purpose="styling">
		/* Define the skin elements that should not be colorized.
		   For button, the graphics are colorized but the label is not. */
		static private const exclusions:Array = [ "labelDisplay", "dot" ];

		override public function get colorizeExclusions():Array
		{
			return exclusions;
		}

		override protected function initializationComplete():void
		{
			useChromeColor = true;
			super.initializationComplete();
		}
	</fx:Script>

	<fx:Script>
		<![CDATA[
			private static const focusExclusions:Array = [ "labelDisplay" ];

			override public function get focusSkinExclusions():Array
			{
				return focusExclusions;
			};
		]]>
	</fx:Script>

	<s:states>
		<s:State name="up" />
		<s:State name="over" stateGroups="overStates" />
		<s:State name="down" stateGroups="downStates" />
		<s:State name="disabled" stateGroups="disabledStates" />
		<s:State name="upAndSelected" stateGroups="selectedStates" />
		<s:State name="overAndSelected" stateGroups="overStates, selectedStates" />
		<s:State name="downAndSelected" stateGroups="downStates, selectedStates" />
		<s:State name="disabledAndSelected" stateGroups="disabledStates, selectedStates" />
	</s:states>

	<s:Group left="2" verticalCenter="0" width="20" height="20">

		<!-- fill -->
		<s:Ellipse id="fill" left="1" top="1" right="1" bottom="1">
			<s:fill>
				<s:SolidColor color="0xF2F5F7" color.overStates="0xFAFCFD" color.upAndSelected="0xffffff" />
			</s:fill>
			<s:stroke>
				<s:SolidColorStroke color="0xD4DEE5" color.selectedStates="0x50C8EF" />
			</s:stroke>
		</s:Ellipse>

		<s:Ellipse id="dot" left="6" top="6" right="6" bottom="6" includeIn="selectedStates">
			<s:fill>
				<s:SolidColor color="0x50C8EF" />
			</s:fill>
		</s:Ellipse>

	</s:Group>

	<!-- Label -->
	<!---  @copy spark.components.supportClasses.ButtonBase#labelDisplay -->
	<s:Label id="labelDisplay" textAlign="start"
			 minWidth="40" verticalAlign="middle"
			 maxDisplayedLines="1" left="30"
			 right="2" verticalCenter="0" />

</s:SparkSkin>
