<?xml version="1.0" encoding="utf-8"?>

<!--

	ADOBE SYSTEMS INCORPORATED
	Copyright 2008 Adobe Systems Incorporated
	All Rights Reserved.

	NOTICE: Adobe permits you to use, modify, and distribute this file
	in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for a Spark TitleWindow container.

	 @see spark.skins.spark.TitleWindowCloseButtonSkin
	 @see spark.components.TitleWindow

	 @langversion 3.0
	 @playerversion Flash 10
	 @playerversion AIR 1.5
	 @productversion Flex 4
-->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
			 blendMode="normal" mouseEnabled="false" minWidth="76" minHeight="76" alpha.disabled="0.5" alpha.disabledWithControlBar="0.5">

	<fx:Metadata>
		<![CDATA[ 
        /** 
         * @copy spark.skins.spark.ApplicationSkin#hostComponent
         */
        [HostComponent("spark.components.TitleWindow")]
        ]]>
	</fx:Metadata>

	<fx:Declarations>
		<s:DropShadowFilter id="dropShadow" blurX="5" blurY="5" alpha="0.1" distance="2" angle="90" color="0x000000" />
	</fx:Declarations>

	<fx:Script fb:purpose="styling">
		<![CDATA[
			import mx.core.FlexVersion;

			/* Define the skin elements that should not be colorized.
			For panel, border and title background are skinned, but the content area, background, border, and title text are not. */
			static private const exclusions:Array = [ "background", "titleDisplay", "contentGroup", "border" ];

			/**
			 * @private
			 */
			override public function get colorizeExclusions():Array
			{
				return exclusions;
			}

			/**
			 * @private
			 */
			override protected function updateDisplayList( unscaledWidth:Number, unscaledHeight:Number ):void
			{
				if( getStyle( "borderVisible" ) == true )
				{
					border.visible = true;
					background.left = background.top = background.right = background.bottom = 1;
					contents.left = contents.top = contents.right = contents.bottom = 1;
				}
				else
				{
					border.visible = false;
					background.left = background.top = background.right = background.bottom = 0;
					contents.left = contents.top = contents.right = contents.bottom = 0;
				}

				var cr:Number = getStyle( "cornerRadius" );
				var borderColor:uint = getStyle( "borderColor" );
				var borderAlpha:Number = getStyle( "borderAlpha" );
				var backgroundColor:uint = getStyle( "backgroundColor" );
				var backgroundAlpha:Number = getStyle( "backgroundAlpha" );

				borderAlpha = isNaN( borderAlpha ) ? 1 : borderAlpha;
				backgroundAlpha = isNaN( backgroundAlpha ) ? 1 : backgroundAlpha;
				border.radiusX = background.radiusX = topMaskRect.radiusX = cr;

				borderStroke.color = borderColor;
				borderStroke.alpha = borderAlpha;
				backgroundFill.color = backgroundColor;
				backgroundFill.alpha = backgroundAlpha;

				topLiner.color = borderColor;
				topLiner.alpha = borderAlpha * 0.3;

				if( getStyle( "dropShadowVisible" ))
				{
					background.filters = [ dropShadow ];
				}
				else
				{
					background.filters = null;
				}

				if( currentState == "normalWithControlBar" || currentState == "inactiveWithControlBar" || currentState == "disabledWithControlBar" )
				{
					bottomLiner.color = borderColor;
					bottomLiner.alpha = borderAlpha * 0.3;
					bottomMaskRect.radiusX = cr;
				}

				super.updateDisplayList( unscaledWidth, unscaledHeight );
			}
		]]>
	</fx:Script>

	<s:states>
		<s:State name="normal" />
		<s:State name="inactive" stateGroups="inactiveGroup" />
		<s:State name="disabled" />
		<s:State name="normalWithControlBar" stateGroups="withControls" />
		<s:State name="inactiveWithControlBar" stateGroups="withControls, inactiveGroup" />
		<s:State name="disabledWithControlBar" stateGroups="withControls" />
	</s:states>

	<!--- drop shadow can't be hittable so all other graphics go in this group -->
	<s:Group left="0" right="0" top="0" bottom="0">

		<!--- top group mask @private-->
		<s:Group left="1" top="1" right="1" bottom="1" id="topGroupMask">
			<!--- @private-->
			<s:Rect id="topMaskRect" left="0" top="0" right="0" bottom="0">
				<s:fill>
					<s:SolidColor alpha="0" />
				</s:fill>
			</s:Rect>
		</s:Group>

		<!--- bottom group mask @private-->
		<s:Group left="1" top="1" right="1" bottom="1" id="bottomGroupMask" includeIn="withControls">
			<!--- @private-->
			<s:Rect id="bottomMaskRect" left="0" top="0" right="0" bottom="0">
				<s:fill>
					<s:SolidColor alpha="0" />
				</s:fill>
			</s:Rect>
		</s:Group>

		<!--- layer 1: border @private -->
		<s:Rect id="border" left="0" right="0" top="0" bottom="0">
			<s:stroke>
				<!--- Defines the TitleWindowSkin class's border stroke. The default value is 1. -->
				<s:SolidColorStroke id="borderStroke" weight="1" />
			</s:stroke>
		</s:Rect>

		<!-- layer 2: background fill -->
		<!--- Defines the appearance of the TitleWindowSkin class's background. -->
		<s:Rect id="background" left="1" top="1" right="1" bottom="1">
			<s:fill>
				<!--- Defines the TitleWindowSkin class's background fill. The default color is 0xFFFFFF. -->
				<s:SolidColor id="backgroundFill" color="#FFFFFF" />
			</s:fill>
		</s:Rect>

		<!-- layer 3: contents -->
		<!--- Contains the vertical stack of title bar content and control bar. -->
		<s:Group left="1" right="1" top="1" bottom="1" id="contents">
			<s:layout>
				<s:VerticalLayout gap="0" horizontalAlign="justify" />
			</s:layout>
			<!--- @private -->
			<s:Group id="topGroup" mask="{topGroupMask}">

				<!--- layer 0: title bar fill @private -->
				<s:Rect id="tbFill" left="0" right="0" top="0" bottom="1">
					<s:fill>
						<s:SolidColor id="topBackFill" color="0xF2F5F7" />
					</s:fill>
				</s:Rect>

				<!--- layer 2: title bar divider @private -->
				<s:Rect id="tbDiv" left="0" right="0" height="1" bottom="0">
					<s:fill>
						<s:SolidColor color="0xD4DEE5" id="topLiner" />
					</s:fill>
				</s:Rect>

				<!-- layer 3: text -->
				<!--- @copy spark.components.Panel#titleDisplay -->
				<s:Label id="titleDisplay" maxDisplayedLines="1" color="0x667788" left="20" right="40" top="2" bottom="0" minHeight="35"
						 verticalAlign="middle" textAlign="start" fontWeight="bold" />

				<!-- layer 4: moveArea -->
				<!--- @copy spark.components.TitleWindow#moveArea -->
				<s:Group id="moveArea" left="0" right="0" top="0" bottom="0" />

				<!--- @copy spark.components.TitleWindow#closeButton -->
				<s:Button id="closeButton" useHandCursor="true" buttonMode="true" skinClass="starskin.skins.TitleWindowCloseButtonSkin" right="10"
						  verticalCenter="0" />
			</s:Group>

			<!--
				Note: setting the minimum size to 0 here so that changes to the host component's
				size will not be thwarted by this skin part's minimum size.   This is a compromise,
				more about it here: http://bugs.adobe.com/jira/browse/SDK-21143
			-->
			<!--- @copy spark.components.SkinnableContainer#contentGroup -->
			<s:Group id="contentGroup" width="100%" height="100%" minWidth="0" minHeight="0">
			</s:Group>

			<!--- @private -->
			<s:Group id="bottomGroup" minWidth="0" minHeight="0" includeIn="withControls">

				<s:Group left="0" right="0" top="0" bottom="0" mask="{bottomGroupMask}">

					<!-- layer 0: control bar divider line -->
					<s:Rect left="0" right="0" top="0" height="1">
						<s:fill>
							<s:SolidColor color="0xD4DEE5" id="bottomLiner" />
						</s:fill>
					</s:Rect>

					<!-- layer 2: control bar fill -->
					<s:Rect left="0" right="0" top="1" bottom="0">
						<s:fill>
							<s:SolidColor color="#F2F5F7" />
						</s:fill>
					</s:Rect>
				</s:Group>

				<!-- layer 3: control bar -->
				<!--- @copy spark.components.Panel#controlBarGroup -->
				<s:Group id="controlBarGroup" left="0" right="0" top="1" bottom="1" minWidth="0" minHeight="0">
					<s:layout>
						<s:HorizontalLayout paddingLeft="10" paddingRight="10" paddingTop="7" paddingBottom="7" gap="10" />
					</s:layout>
				</s:Group>
			</s:Group>
		</s:Group>
	</s:Group>
</s:SparkSkin>
